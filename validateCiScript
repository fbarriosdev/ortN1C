function validate($obj, options) {
		if ($obj && $obj.length) {
			return $obj.validator(
				$.extend({}	
					,{custom: {
						validci: function($el) {
							console.log("validci init val:"+$el.val());
							var ciRes = validate_ci($el.val());
							console.log("validci:"+ciRes);
							if (!ciRes) {
								return "El documento es invalido";
							}
						},
						validrut: function($el) {
							console.log("validrut init val:"+$el.val());
							var rutRes = validate_isRUT($el.val());
							console.log("validrut:"+rutRes);
				            if (!rutRes) {
				            	return "El RUT es invalido";	
				            }
				        },
				        date: function($el) {
							if (!($el.val().match(dateRegex))) {
								return "La fecha no es valida";
							}
						},
						minlen: function($el) {
							var minLen = $el.data("minlen");
							if ($el.val().length < minLen) {
								return "El largo minimo del campo es "+minLen;
							}
						},
						maxlen: function($el) {
							var maxLen = $el.data("maxlen");
							if ($el.val().length > maxLen) {
								$el.val($el.val().substring(0, maxLen));
								return "El largo máximo del campo es "+maxLen;
							}
						},
						integer: function($el) {
			  				if (!($el.val().match(integerRegex))) {
								return "Ingrese un número entero válido";
							}
						},
						decimal: function($el) {
							if (!($el.val().match(decimalRegex))) {
								return "Ingrese un número decimal válido";
							}
						},
						nonzero: function($el) {
							if (!($el.val().match(decimalRegex))) {
								return "Ingrese un número válido";
							} else
							if (eval($el.val()) == 0) {
								return "El valor no puede ser 0";
							}
						},
						min: function($el) {
							var min = eval($el.data("min"));
							if (eval($el.val()) < min) {
								return "El minimo del campo es "+min;
							}
						},
						max: function($el) {
							var max = eval($el.data("max"));
							if (eval($el.val()) > max) {
								return "El maximo del campo es "+max;
							}
						},
			   			barcode : function($el) {
							var isValid = true;
							
			 				var eanCode = $el.val();
			 				
			   				// Check if only digits    				
							var ValidChars = "0123456789";
							for (i = 0; i < eanCode.length; i++) { 
								digit = eanCode.charAt(i); 
								if (ValidChars.indexOf(digit) == -1) {
									return "El codigo de barras solo admite numeros";
								}
							}
							
							if (eanCode.length < 4) {
								isValid = false;
							}
			    				
							// Add five 0 if the code has only 8 digits
							//if (eanCode.length == 8 ) {
							//	eanCode = "00000" + eanCode;
							//}
							// Check for 13 digits otherwise
							//else if (eanCode.length != 13) {
							//	isValid = false;
							//}
							
							if (isValid) {
								
			    				// Get the check number
			    				originalCheck = eanCode.substring(eanCode.length - 1);
			    				eanCode = eanCode.substring(0, eanCode.length - 1);
			    				
			    				var even = 0;
			    				var odd = 0;
			    				
			    				var isEven = true;
			    				for (i = eanCode.length -1; i >= 0 ; i--) {
			    					if (isEven) even += Number(eanCode.charAt(i));
			    					else odd += Number(eanCode.charAt(i));
			    					
			    					isEven = !isEven;
			    				}
			    				even *= 3;
			    					    				
			    				// Add two totals together
			    				total = even + odd;
			    				
			    				// Calculate the checksum
			    			    // Divide total by 10 and store the remainder
			    			    checksum = total % 10;
			    			    // If result is not 0 then take away 10
			    			    if (checksum != 0) {
			    			        checksum = 10 - checksum;
			    			    }
			    			    
			    			    //console.log("barcode:"+eanCode+" orgChk:"+originalCheck+" calcChk:"+checksum+" even:"+even+" odd:"+odd);
			
			    				// Return the result
			    				if (checksum != originalCheck) {
			    					isValid = false;
			    				}
							}
							
							if (!isValid) {
								return "El código de barras no es valido.";
							}
							
						}
					}		
				}, options)
			);	
		}
	}

	//Validación sobre cédula de identidad y rut
	function validate_isRUT(rut) {
	    if (!/^([0-9])*$/.test(rut)) {
	        return false;
	    }
	    var dc = rut.substr(11, 1);
	    var rut = rut.substr(0, 11);
	    var total = 0;
	    var factor = 2;
	    for (i = 10; i >= 0; i--) {
	        total += (factor * rut.substr(i, 1));
	        factor = (factor == 9)?2:++factor;
	    }
	    var dv = 11 - (total % 11);
	    if (dv == 11) {
	        dv = 0;
	    }
	    else if (dv == 10) {
	        dv = 1;
	    }
	    if (dv == dc) {
	        return true;
	    }
	    return false;
	}
	function validate_ci(ci) {
        ci = clean_ci(ci);
        var dig = ci[ci.length - 1];
        ci = ci.replace(/[0-9]$/, '');
        return (dig == validation_digit(ci));
	}
	function validation_digit(ci) {
        var a = 0;
        var i = 0;
        if(ci.length <= 6) {
            for (i = ci.length; i < 7; i++) {
            	ci = '0' + ci;
            }
        }
        for (i = 0; i < 7; i++) {
            a += (parseInt("2987634"[i]) * parseInt(ci[i])) % 10;
        }
        if (a%10 === 0) {
            return 0;
        } else {
            return 10 - a % 10;
        }
    }
    function clean_ci(ci) {
        return ci.replace(/\D/g, '');
    }
	
